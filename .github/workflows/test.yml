name: Test

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: test-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}

      - run: |
          pip install -U poetry==v1.2.0a2
          poetry config virtualenvs.create false

      - run: poetry install

      - run: pytest --color=yes --cov

  typing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: typing-${{ hashFiles('pyproject.toml') }}

      - run: |
          pip install -U poetry==v1.2.0a2
          poetry config virtualenvs.create false

      - run: poetry install

      - run: npm install -g --no-package-lock --no-save pyright

      - run: pyright

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: lint-${{ hashFiles('pyproject.toml') }}

      - run: pip install -U pre-commit

      - run: pre-commit run --color=always --all-files
